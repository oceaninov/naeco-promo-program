// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: program.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddProgramReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ChannelId                string `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	TopicId                  string `protobuf:"bytes,3,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Description              string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	MemoUrl                  string `protobuf:"bytes,5,opt,name=memo_url,json=memoUrl,proto3" json:"memo_url,omitempty"`
	StartAt                  int64  `protobuf:"varint,6,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`
	EndAt                    int64  `protobuf:"varint,7,opt,name=end_at,json=endAt,proto3" json:"end_at,omitempty"`
	AllocatedAmount          int64  `protobuf:"varint,8,opt,name=allocated_amount,json=allocatedAmount,proto3" json:"allocated_amount,omitempty"`
	AvailableAllocatedAmount int64  `protobuf:"varint,9,opt,name=available_allocated_amount,json=availableAllocatedAmount,proto3" json:"available_allocated_amount,omitempty"`
	EligibilityCheck         string `protobuf:"bytes,10,opt,name=eligibility_check,json=eligibilityCheck,proto3" json:"eligibility_check,omitempty"`
	Status                   int64  `protobuf:"varint,11,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt                int64  `protobuf:"varint,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy                string `protobuf:"bytes,13,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedAt                int64  `protobuf:"varint,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	UpdatedBy                string `protobuf:"bytes,15,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	SourceOfFund             string `protobuf:"bytes,16,opt,name=source_of_fund,json=sourceOfFund,proto3" json:"source_of_fund,omitempty"`
	DiscountCalculation      string `protobuf:"bytes,17,opt,name=discount_calculation,json=discountCalculation,proto3" json:"discount_calculation,omitempty"`
	AllocatedQuota           int64  `protobuf:"varint,18,opt,name=allocated_quota,json=allocatedQuota,proto3" json:"allocated_quota,omitempty"`
	AvailableAllocatedQuota  int64  `protobuf:"varint,19,opt,name=available_allocated_quota,json=availableAllocatedQuota,proto3" json:"available_allocated_quota,omitempty"`
	DiscountPercent          int64  `protobuf:"varint,20,opt,name=discount_percent,json=discountPercent,proto3" json:"discount_percent,omitempty"`
	DiscountAmount           int64  `protobuf:"varint,21,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount,omitempty"`
	MerchantCsvUrl           string `protobuf:"bytes,22,opt,name=merchant_csv_url,json=merchantCsvUrl,proto3" json:"merchant_csv_url,omitempty"`
	CustomerCsvUrl           string `protobuf:"bytes,23,opt,name=customer_csv_url,json=customerCsvUrl,proto3" json:"customer_csv_url,omitempty"`
	RefreshProgramQuotaDaily int64  `protobuf:"varint,24,opt,name=refresh_program_quota_daily,json=refreshProgramQuotaDaily,proto3" json:"refresh_program_quota_daily,omitempty"`
}

func (x *AddProgramReq) Reset() {
	*x = AddProgramReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProgramReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProgramReq) ProtoMessage() {}

func (x *AddProgramReq) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProgramReq.ProtoReflect.Descriptor instead.
func (*AddProgramReq) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{0}
}

func (x *AddProgramReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddProgramReq) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *AddProgramReq) GetTopicId() string {
	if x != nil {
		return x.TopicId
	}
	return ""
}

func (x *AddProgramReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddProgramReq) GetMemoUrl() string {
	if x != nil {
		return x.MemoUrl
	}
	return ""
}

func (x *AddProgramReq) GetStartAt() int64 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *AddProgramReq) GetEndAt() int64 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *AddProgramReq) GetAllocatedAmount() int64 {
	if x != nil {
		return x.AllocatedAmount
	}
	return 0
}

func (x *AddProgramReq) GetAvailableAllocatedAmount() int64 {
	if x != nil {
		return x.AvailableAllocatedAmount
	}
	return 0
}

func (x *AddProgramReq) GetEligibilityCheck() string {
	if x != nil {
		return x.EligibilityCheck
	}
	return ""
}

func (x *AddProgramReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddProgramReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AddProgramReq) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *AddProgramReq) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *AddProgramReq) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *AddProgramReq) GetSourceOfFund() string {
	if x != nil {
		return x.SourceOfFund
	}
	return ""
}

func (x *AddProgramReq) GetDiscountCalculation() string {
	if x != nil {
		return x.DiscountCalculation
	}
	return ""
}

func (x *AddProgramReq) GetAllocatedQuota() int64 {
	if x != nil {
		return x.AllocatedQuota
	}
	return 0
}

func (x *AddProgramReq) GetAvailableAllocatedQuota() int64 {
	if x != nil {
		return x.AvailableAllocatedQuota
	}
	return 0
}

func (x *AddProgramReq) GetDiscountPercent() int64 {
	if x != nil {
		return x.DiscountPercent
	}
	return 0
}

func (x *AddProgramReq) GetDiscountAmount() int64 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *AddProgramReq) GetMerchantCsvUrl() string {
	if x != nil {
		return x.MerchantCsvUrl
	}
	return ""
}

func (x *AddProgramReq) GetCustomerCsvUrl() string {
	if x != nil {
		return x.CustomerCsvUrl
	}
	return ""
}

func (x *AddProgramReq) GetRefreshProgramQuotaDaily() int64 {
	if x != nil {
		return x.RefreshProgramQuotaDaily
	}
	return 0
}

type ProgramRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Messages string `protobuf:"bytes,2,opt,name=messages,proto3" json:"messages,omitempty"`
}

func (x *ProgramRes) Reset() {
	*x = ProgramRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgramRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgramRes) ProtoMessage() {}

func (x *ProgramRes) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgramRes.ProtoReflect.Descriptor instead.
func (*ProgramRes) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{1}
}

func (x *ProgramRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ProgramRes) GetMessages() string {
	if x != nil {
		return x.Messages
	}
	return ""
}

type EditProgramReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ChannelId                string `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	TopicId                  string `protobuf:"bytes,3,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Description              string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	MemoUrl                  string `protobuf:"bytes,5,opt,name=memo_url,json=memoUrl,proto3" json:"memo_url,omitempty"`
	StartAt                  int64  `protobuf:"varint,6,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`
	EndAt                    int64  `protobuf:"varint,7,opt,name=end_at,json=endAt,proto3" json:"end_at,omitempty"`
	AllocatedAmount          int64  `protobuf:"varint,8,opt,name=allocated_amount,json=allocatedAmount,proto3" json:"allocated_amount,omitempty"`
	AvailableAllocatedAmount int64  `protobuf:"varint,9,opt,name=available_allocated_amount,json=availableAllocatedAmount,proto3" json:"available_allocated_amount,omitempty"`
	EligibilityCheck         string `protobuf:"bytes,10,opt,name=eligibility_check,json=eligibilityCheck,proto3" json:"eligibility_check,omitempty"`
	Status                   int64  `protobuf:"varint,11,opt,name=status,proto3" json:"status,omitempty"`
	UpdatedAt                int64  `protobuf:"varint,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	UpdatedBy                string `protobuf:"bytes,13,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	SourceOfFund             string `protobuf:"bytes,14,opt,name=source_of_fund,json=sourceOfFund,proto3" json:"source_of_fund,omitempty"`
	DiscountCalculation      string `protobuf:"bytes,15,opt,name=discount_calculation,json=discountCalculation,proto3" json:"discount_calculation,omitempty"`
	AllocatedQuota           int64  `protobuf:"varint,16,opt,name=allocated_quota,json=allocatedQuota,proto3" json:"allocated_quota,omitempty"`
	AvailableAllocatedQuota  int64  `protobuf:"varint,17,opt,name=available_allocated_quota,json=availableAllocatedQuota,proto3" json:"available_allocated_quota,omitempty"`
	DiscountPercent          int64  `protobuf:"varint,18,opt,name=discount_percent,json=discountPercent,proto3" json:"discount_percent,omitempty"`
	DiscountAmount           int64  `protobuf:"varint,19,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount,omitempty"`
	MerchantCsvUrl           string `protobuf:"bytes,20,opt,name=merchant_csv_url,json=merchantCsvUrl,proto3" json:"merchant_csv_url,omitempty"`
	CustomerCsvUrl           string `protobuf:"bytes,21,opt,name=customer_csv_url,json=customerCsvUrl,proto3" json:"customer_csv_url,omitempty"`
	RefreshProgramQuotaDaily int64  `protobuf:"varint,22,opt,name=refresh_program_quota_daily,json=refreshProgramQuotaDaily,proto3" json:"refresh_program_quota_daily,omitempty"`
}

func (x *EditProgramReq) Reset() {
	*x = EditProgramReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditProgramReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditProgramReq) ProtoMessage() {}

func (x *EditProgramReq) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditProgramReq.ProtoReflect.Descriptor instead.
func (*EditProgramReq) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{2}
}

func (x *EditProgramReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EditProgramReq) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *EditProgramReq) GetTopicId() string {
	if x != nil {
		return x.TopicId
	}
	return ""
}

func (x *EditProgramReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EditProgramReq) GetMemoUrl() string {
	if x != nil {
		return x.MemoUrl
	}
	return ""
}

func (x *EditProgramReq) GetStartAt() int64 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *EditProgramReq) GetEndAt() int64 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *EditProgramReq) GetAllocatedAmount() int64 {
	if x != nil {
		return x.AllocatedAmount
	}
	return 0
}

func (x *EditProgramReq) GetAvailableAllocatedAmount() int64 {
	if x != nil {
		return x.AvailableAllocatedAmount
	}
	return 0
}

func (x *EditProgramReq) GetEligibilityCheck() string {
	if x != nil {
		return x.EligibilityCheck
	}
	return ""
}

func (x *EditProgramReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *EditProgramReq) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *EditProgramReq) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *EditProgramReq) GetSourceOfFund() string {
	if x != nil {
		return x.SourceOfFund
	}
	return ""
}

func (x *EditProgramReq) GetDiscountCalculation() string {
	if x != nil {
		return x.DiscountCalculation
	}
	return ""
}

func (x *EditProgramReq) GetAllocatedQuota() int64 {
	if x != nil {
		return x.AllocatedQuota
	}
	return 0
}

func (x *EditProgramReq) GetAvailableAllocatedQuota() int64 {
	if x != nil {
		return x.AvailableAllocatedQuota
	}
	return 0
}

func (x *EditProgramReq) GetDiscountPercent() int64 {
	if x != nil {
		return x.DiscountPercent
	}
	return 0
}

func (x *EditProgramReq) GetDiscountAmount() int64 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *EditProgramReq) GetMerchantCsvUrl() string {
	if x != nil {
		return x.MerchantCsvUrl
	}
	return ""
}

func (x *EditProgramReq) GetCustomerCsvUrl() string {
	if x != nil {
		return x.CustomerCsvUrl
	}
	return ""
}

func (x *EditProgramReq) GetRefreshProgramQuotaDaily() int64 {
	if x != nil {
		return x.RefreshProgramQuotaDaily
	}
	return 0
}

type DeleteProgramReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteProgramReq) Reset() {
	*x = DeleteProgramReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProgramReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProgramReq) ProtoMessage() {}

func (x *DeleteProgramReq) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProgramReq.ProtoReflect.Descriptor instead.
func (*DeleteProgramReq) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteProgramReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetProgramReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId string `protobuf:"bytes,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *GetProgramReq) Reset() {
	*x = GetProgramReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProgramReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProgramReq) ProtoMessage() {}

func (x *GetProgramReq) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProgramReq.ProtoReflect.Descriptor instead.
func (*GetProgramReq) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{4}
}

func (x *GetProgramReq) GetTopicId() string {
	if x != nil {
		return x.TopicId
	}
	return ""
}

type GetProgramDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetProgramDetailReq) Reset() {
	*x = GetProgramDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProgramDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProgramDetailReq) ProtoMessage() {}

func (x *GetProgramDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProgramDetailReq.ProtoReflect.Descriptor instead.
func (*GetProgramDetailReq) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{5}
}

func (x *GetProgramDetailReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Program struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ChannelId                string `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	TopicId                  string `protobuf:"bytes,3,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Description              string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	MemoUrl                  string `protobuf:"bytes,5,opt,name=memo_url,json=memoUrl,proto3" json:"memo_url,omitempty"`
	StartAt                  int64  `protobuf:"varint,6,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`
	EndAt                    int64  `protobuf:"varint,7,opt,name=end_at,json=endAt,proto3" json:"end_at,omitempty"`
	AllocatedAmount          int64  `protobuf:"varint,8,opt,name=allocated_amount,json=allocatedAmount,proto3" json:"allocated_amount,omitempty"`
	AvailableAllocatedAmount int64  `protobuf:"varint,9,opt,name=available_allocated_amount,json=availableAllocatedAmount,proto3" json:"available_allocated_amount,omitempty"`
	EligibilityCheck         string `protobuf:"bytes,10,opt,name=eligibility_check,json=eligibilityCheck,proto3" json:"eligibility_check,omitempty"`
	Status                   int64  `protobuf:"varint,11,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt                int64  `protobuf:"varint,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy                string `protobuf:"bytes,13,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedAt                int64  `protobuf:"varint,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	UpdatedBy                string `protobuf:"bytes,15,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	SourceOfFund             string `protobuf:"bytes,16,opt,name=source_of_fund,json=sourceOfFund,proto3" json:"source_of_fund,omitempty"`
	DiscountCalculation      string `protobuf:"bytes,17,opt,name=discount_calculation,json=discountCalculation,proto3" json:"discount_calculation,omitempty"`
	AllocatedQuota           int64  `protobuf:"varint,18,opt,name=allocated_quota,json=allocatedQuota,proto3" json:"allocated_quota,omitempty"`
	AvailableAllocatedQuota  int64  `protobuf:"varint,19,opt,name=available_allocated_quota,json=availableAllocatedQuota,proto3" json:"available_allocated_quota,omitempty"`
	DiscountPercent          int64  `protobuf:"varint,20,opt,name=discount_percent,json=discountPercent,proto3" json:"discount_percent,omitempty"`
	DiscountAmount           int64  `protobuf:"varint,21,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount,omitempty"`
	MerchantCsvUrl           string `protobuf:"bytes,22,opt,name=merchant_csv_url,json=merchantCsvUrl,proto3" json:"merchant_csv_url,omitempty"`
	CustomerCsvUrl           string `protobuf:"bytes,23,opt,name=customer_csv_url,json=customerCsvUrl,proto3" json:"customer_csv_url,omitempty"`
	TopicTitle               string `protobuf:"bytes,24,opt,name=topic_title,json=topicTitle,proto3" json:"topic_title,omitempty"`
	RefreshProgramQuotaDaily int64  `protobuf:"varint,25,opt,name=refresh_program_quota_daily,json=refreshProgramQuotaDaily,proto3" json:"refresh_program_quota_daily,omitempty"`
}

func (x *Program) Reset() {
	*x = Program{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Program) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Program) ProtoMessage() {}

func (x *Program) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Program.ProtoReflect.Descriptor instead.
func (*Program) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{6}
}

func (x *Program) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Program) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *Program) GetTopicId() string {
	if x != nil {
		return x.TopicId
	}
	return ""
}

func (x *Program) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Program) GetMemoUrl() string {
	if x != nil {
		return x.MemoUrl
	}
	return ""
}

func (x *Program) GetStartAt() int64 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *Program) GetEndAt() int64 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *Program) GetAllocatedAmount() int64 {
	if x != nil {
		return x.AllocatedAmount
	}
	return 0
}

func (x *Program) GetAvailableAllocatedAmount() int64 {
	if x != nil {
		return x.AvailableAllocatedAmount
	}
	return 0
}

func (x *Program) GetEligibilityCheck() string {
	if x != nil {
		return x.EligibilityCheck
	}
	return ""
}

func (x *Program) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Program) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Program) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Program) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Program) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *Program) GetSourceOfFund() string {
	if x != nil {
		return x.SourceOfFund
	}
	return ""
}

func (x *Program) GetDiscountCalculation() string {
	if x != nil {
		return x.DiscountCalculation
	}
	return ""
}

func (x *Program) GetAllocatedQuota() int64 {
	if x != nil {
		return x.AllocatedQuota
	}
	return 0
}

func (x *Program) GetAvailableAllocatedQuota() int64 {
	if x != nil {
		return x.AvailableAllocatedQuota
	}
	return 0
}

func (x *Program) GetDiscountPercent() int64 {
	if x != nil {
		return x.DiscountPercent
	}
	return 0
}

func (x *Program) GetDiscountAmount() int64 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *Program) GetMerchantCsvUrl() string {
	if x != nil {
		return x.MerchantCsvUrl
	}
	return ""
}

func (x *Program) GetCustomerCsvUrl() string {
	if x != nil {
		return x.CustomerCsvUrl
	}
	return ""
}

func (x *Program) GetTopicTitle() string {
	if x != nil {
		return x.TopicTitle
	}
	return ""
}

func (x *Program) GetRefreshProgramQuotaDaily() int64 {
	if x != nil {
		return x.RefreshProgramQuotaDaily
	}
	return 0
}

type Programs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Programs []*Program `protobuf:"bytes,1,rep,name=programs,proto3" json:"programs,omitempty"`
}

func (x *Programs) Reset() {
	*x = Programs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Programs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Programs) ProtoMessage() {}

func (x *Programs) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Programs.ProtoReflect.Descriptor instead.
func (*Programs) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{7}
}

func (x *Programs) GetPrograms() []*Program {
	if x != nil {
		return x.Programs
	}
	return nil
}

type ProgramStatusUpdateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ProgramStatusUpdateRes) Reset() {
	*x = ProgramStatusUpdateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgramStatusUpdateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgramStatusUpdateRes) ProtoMessage() {}

func (x *ProgramStatusUpdateRes) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgramStatusUpdateRes.ProtoReflect.Descriptor instead.
func (*ProgramStatusUpdateRes) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{8}
}

func (x *ProgramStatusUpdateRes) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ProgramStatusUpdateRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ProgramStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ProgramStatus) Reset() {
	*x = ProgramStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgramStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgramStatus) ProtoMessage() {}

func (x *ProgramStatus) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgramStatus.ProtoReflect.Descriptor instead.
func (*ProgramStatus) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{9}
}

func (x *ProgramStatus) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProgramStatus) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

var File_program_proto protoreflect.FileDescriptor

var file_program_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x06, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x97, 0x07, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x12,
	0x29, 0x0a, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x1a, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x65, 0x6c, 0x69, 0x67,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x66, 0x46, 0x75, 0x6e, 0x64, 0x12,
	0x31, 0x0a, 0x14, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x61, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x19, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x63, 0x73, 0x76, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x43,
	0x73, 0x76, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x63, 0x73, 0x76, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x73, 0x76, 0x55, 0x72, 0x6c, 0x12,
	0x3d, 0x0a, 0x1b, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x18, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x22, 0x42,
	0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x22, 0xda, 0x06, 0x0a, 0x0e, 0x45, 0x64, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x12, 0x29,
	0x0a, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x1a, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x65, 0x6c, 0x69, 0x67, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x66, 0x46, 0x75, 0x6e, 0x64,
	0x12, 0x31, 0x0a, 0x14, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x19,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x17, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x63, 0x73, 0x76, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x43, 0x73, 0x76, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x63, 0x73, 0x76, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x73, 0x76, 0x55, 0x72, 0x6c,
	0x12, 0x3d, 0x0a, 0x1b, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x22,
	0x22, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x22,
	0x25, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb2, 0x07, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x6d, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x41, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x1a, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x62, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x6f, 0x66, 0x5f, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x66, 0x46, 0x75, 0x6e, 0x64, 0x12, 0x31, 0x0a, 0x14, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27,
	0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x6f, 0x74,
	0x61, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x19, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x71,
	0x75, 0x6f, 0x74, 0x61, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x51, 0x75,
	0x6f, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x27,
	0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x5f, 0x63, 0x73, 0x76, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x43, 0x73, 0x76, 0x55, 0x72,
	0x6c, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x63, 0x73,
	0x76, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x73, 0x76, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x3d, 0x0a, 0x1b,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x18, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x22, 0x37, 0x0a, 0x08, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x73, 0x22, 0x4a, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x32, 0x9c, 0x03, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x12, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0b,
	0x45, 0x64, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x16, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52,
	0x65, 0x71, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x42, 0x79, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x44, 0x12, 0x15, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x40, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x55, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x1a,
	0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x42,
	0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x62,
	0x64, 0x67, 0x6f, 0x63, 0x65, 0x61, 0x6e, 0x36, 0x2f, 0x6e, 0x6f, 0x62, 0x69, 0x74, 0x61, 0x2d,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_program_proto_rawDescOnce sync.Once
	file_program_proto_rawDescData = file_program_proto_rawDesc
)

func file_program_proto_rawDescGZIP() []byte {
	file_program_proto_rawDescOnce.Do(func() {
		file_program_proto_rawDescData = protoimpl.X.CompressGZIP(file_program_proto_rawDescData)
	})
	return file_program_proto_rawDescData
}

var file_program_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_program_proto_goTypes = []interface{}{
	(*AddProgramReq)(nil),          // 0: api.v1.AddProgramReq
	(*ProgramRes)(nil),             // 1: api.v1.ProgramRes
	(*EditProgramReq)(nil),         // 2: api.v1.EditProgramReq
	(*DeleteProgramReq)(nil),       // 3: api.v1.DeleteProgramReq
	(*GetProgramReq)(nil),          // 4: api.v1.GetProgramReq
	(*GetProgramDetailReq)(nil),    // 5: api.v1.GetProgramDetailReq
	(*Program)(nil),                // 6: api.v1.Program
	(*Programs)(nil),               // 7: api.v1.Programs
	(*ProgramStatusUpdateRes)(nil), // 8: api.v1.ProgramStatusUpdateRes
	(*ProgramStatus)(nil),          // 9: api.v1.ProgramStatus
	(*emptypb.Empty)(nil),          // 10: google.protobuf.Empty
}
var file_program_proto_depIdxs = []int32{
	6,  // 0: api.v1.Programs.programs:type_name -> api.v1.Program
	0,  // 1: api.v1.ProgramService.AddProgram:input_type -> api.v1.AddProgramReq
	2,  // 2: api.v1.ProgramService.EditProgram:input_type -> api.v1.EditProgramReq
	3,  // 3: api.v1.ProgramService.DeleteProgram:input_type -> api.v1.DeleteProgramReq
	4,  // 4: api.v1.ProgramService.GetProgramByTopicID:input_type -> api.v1.GetProgramReq
	5,  // 5: api.v1.ProgramService.GetProgramDetail:input_type -> api.v1.GetProgramDetailReq
	8,  // 6: api.v1.ProgramService.ProgramStatusUpdate:input_type -> api.v1.ProgramStatusUpdateRes
	9,  // 7: api.v1.ProgramService.ProgramChangeStatus:input_type -> api.v1.ProgramStatus
	1,  // 8: api.v1.ProgramService.AddProgram:output_type -> api.v1.ProgramRes
	1,  // 9: api.v1.ProgramService.EditProgram:output_type -> api.v1.ProgramRes
	1,  // 10: api.v1.ProgramService.DeleteProgram:output_type -> api.v1.ProgramRes
	7,  // 11: api.v1.ProgramService.GetProgramByTopicID:output_type -> api.v1.Programs
	6,  // 12: api.v1.ProgramService.GetProgramDetail:output_type -> api.v1.Program
	8,  // 13: api.v1.ProgramService.ProgramStatusUpdate:output_type -> api.v1.ProgramStatusUpdateRes
	10, // 14: api.v1.ProgramService.ProgramChangeStatus:output_type -> google.protobuf.Empty
	8,  // [8:15] is the sub-list for method output_type
	1,  // [1:8] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_program_proto_init() }
func file_program_proto_init() {
	if File_program_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_program_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProgramReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProgramRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditProgramReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProgramReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProgramReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProgramDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Program); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Programs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProgramStatusUpdateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProgramStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_program_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_program_proto_goTypes,
		DependencyIndexes: file_program_proto_depIdxs,
		MessageInfos:      file_program_proto_msgTypes,
	}.Build()
	File_program_proto = out.File
	file_program_proto_rawDesc = nil
	file_program_proto_goTypes = nil
	file_program_proto_depIdxs = nil
}
